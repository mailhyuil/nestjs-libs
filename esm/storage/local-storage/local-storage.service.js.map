{"version":3,"sources":["../../../src/storage/local-storage/local-storage.service.ts"],"sourcesContent":["import {\r\n  encodeName,\r\n  IStorageService,\r\n  LOCAL_STORAGE_MODULE_OPTIONS,\r\n  LocalStorageDeleteFailedException,\r\n  LocalStorageListFailedException,\r\n  LocalStorageModuleOptionsType,\r\n  LocalStorageUploadFailedException,\r\n} from '@mailhyuil/nestjs-libs';\r\nimport {\r\n  Inject,\r\n  Injectable,\r\n  InternalServerErrorException,\r\n  Logger,\r\n} from '@nestjs/common';\r\nimport { Request } from 'express';\r\nimport fs, { createWriteStream } from 'fs';\r\nimport path from 'path';\r\nimport { generateUuid } from '../utils/generate-uuid';\r\n\r\n@Injectable()\r\nexport class LocalStorageService implements IStorageService {\r\n  logger = new Logger(LocalStorageService.name);\r\n\r\n  constructor(\r\n    @Inject(LOCAL_STORAGE_MODULE_OPTIONS)\r\n    private readonly options: LocalStorageModuleOptionsType,\r\n  ) {\r\n    Object.keys(this.options).forEach((key) => {\r\n      const unsetValues: string[] = [];\r\n      if (!this.options[key]) {\r\n        unsetValues.push(key);\r\n      }\r\n      if (unsetValues.length > 0) {\r\n        throw new InternalServerErrorException(\r\n          `Local Storage 설정이 필요합니다. Unset Values : [${unsetValues.join(\r\n            ', ',\r\n          )}]`,\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  async list() {\r\n    const filePaths: string[] = [];\r\n    async function traverseDirectory(currentDir: string) {\r\n      const entries = fs.readdirSync(currentDir, { withFileTypes: true });\r\n\r\n      for (const entry of entries) {\r\n        const fullPath = path.join(currentDir, entry.name);\r\n        if (entry.isDirectory()) {\r\n          await traverseDirectory(fullPath); // 재귀적으로 하위 폴더 탐색\r\n        } else if (entry.isFile()) {\r\n          filePaths.push(fullPath); // 파일이면 경로 추가\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      await traverseDirectory(this.options.dir);\r\n    } catch (error) {\r\n      throw new LocalStorageListFailedException(error);\r\n    }\r\n    const keys = filePaths.map((filePath) => {\r\n      return filePath.replace(this.options.dir + '/', '');\r\n    });\r\n\r\n    return keys;\r\n  }\r\n\r\n  upload(name: string, buffer: Buffer, dir?: string) {\r\n    return new Promise<{ key: string }>((resolve, reject) => {\r\n      const encodedName = generateUuid() + '-' + encodeName(name);\r\n      const year = new Date().getFullYear();\r\n      const month = new Date().getMonth() + 1;\r\n      const date = new Date().getDate();\r\n      const path = `${dir}/${year}/${month}/${date}`;\r\n\r\n      const finalDir = `${this.options.dir}/${path}`;\r\n\r\n      if (!fs.existsSync(finalDir)) {\r\n        fs.mkdirSync(finalDir, { recursive: true });\r\n      }\r\n\r\n      const key = `${path}/${encodedName}`;\r\n\r\n      try {\r\n        fs.writeFileSync(`${this.options.dir}/${key}`, buffer);\r\n      } catch (error) {\r\n        reject(new LocalStorageUploadFailedException(error));\r\n      }\r\n      resolve({ key });\r\n    });\r\n  }\r\n\r\n  uploadByStream(req: Request, dir?: string) {\r\n    return new Promise<{ key: string }>((resolve, reject) => {\r\n      // 🚎 busboy\r\n      req.pipe(req.busboy);\r\n      req.busboy.on('file', (name, file, info) => {\r\n        const { filename } = info;\r\n        const encodedName = generateUuid() + '-' + encodeName(filename);\r\n        const year = new Date().getFullYear();\r\n        const month = new Date().getMonth() + 1;\r\n        const date = new Date().getDate();\r\n        const path = `${dir}/${year}/${month}/${date}`;\r\n        const finalDir = `${this.options.dir}/${path}`;\r\n\r\n        if (!fs.existsSync(finalDir)) {\r\n          fs.mkdirSync(finalDir, { recursive: true });\r\n        }\r\n        const key = `${path}/${encodedName}`;\r\n        const ws = createWriteStream(`${this.options.dir}/${key}`);\r\n\r\n        file.on('data', (data) => {\r\n          ws.write(data);\r\n        });\r\n\r\n        file.on('end', () => {\r\n          ws.end();\r\n          ws.close();\r\n          resolve({ key });\r\n        });\r\n\r\n        file.on('error', (err) => {\r\n          reject(new LocalStorageUploadFailedException(err));\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(key: string) {\r\n    return new Promise<void>((resolve, reject) => {\r\n      try {\r\n        fs.unlinkSync(`${this.options.dir}/${key}`);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(new LocalStorageDeleteFailedException(error));\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteMany(keys: string[]) {\r\n    try {\r\n      keys.forEach((key) => {\r\n        fs.unlinkSync(`${key}`);\r\n      });\r\n    } catch (error) {\r\n      throw new LocalStorageDeleteFailedException(error);\r\n    }\r\n  }\r\n}\r\n"],"names":["encodeName","LOCAL_STORAGE_MODULE_OPTIONS","LocalStorageDeleteFailedException","LocalStorageListFailedException","LocalStorageModuleOptionsType","LocalStorageUploadFailedException","Inject","Injectable","InternalServerErrorException","Logger","fs","createWriteStream","path","generateUuid","LocalStorageService","list","filePaths","traverseDirectory","currentDir","entries","readdirSync","withFileTypes","entry","fullPath","join","name","isDirectory","isFile","push","options","dir","error","keys","map","filePath","replace","upload","buffer","Promise","resolve","reject","encodedName","year","Date","getFullYear","month","getMonth","date","getDate","finalDir","existsSync","mkdirSync","recursive","key","writeFileSync","uploadByStream","req","pipe","busboy","on","file","info","filename","ws","data","write","end","close","err","delete","unlinkSync","deleteMany","forEach","constructor","logger","Object","unsetValues","length"],"mappings":"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"}